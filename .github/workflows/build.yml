name: .NET Core
on:
  push:
  pull_request:
  release:
    types:
      - published
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Official NuGet Feed settings
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_TOKEN }}
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ ubuntu-latest, windows-latest, macos-latest ]
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Prepare for dotnet local tool installation
        run: dotnet new tool-manifest --force
      - name: Install t4plus as dotnet local tool
        run: dotnet tool install pauldeen79.TextTemplateTransformationFramework.T4.Plus.Cmd --version 0.1.19
      - name: Run code generation using t4plus
        run: dotnet t4plus run -f src/CodeGeneration/CodeGeneration.template BasePath:./src $T4.TempPath:./ GenerateMultipleFiles:True DryRun:False
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build -c Release --no-restore
      - name: Test
        run: dotnet test -c Release --no-restore
      - name: Pack Main
        if: matrix.os == 'ubuntu-latest'
        run: dotnet pack -v normal -c Release -o ./artifacts --no-restore --include-symbols --include-source -p:PackageVersion=$GITHUB_RUN_ID
      - name: Upload Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: ./artifacts/*.nupkg
  prerelease:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: nupkg
      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            echo "Publishing $f"
            curl -vX PUT -u "pauldeen79:${{ secrets.FEED_TOKEN }}" -F package=@$f https://nuget.pkg.github.com/pauldeen79/
          done
        shell: bash
  deploy:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Create Release NuGet package
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          echo Version: $VERSION
          VERSION="${VERSION//v}"
          echo Clean Version: $VERSION
          dotnet new tool-manifest --force
          dotnet tool install pauldeen79.TextTemplateTransformationFramework.T4.Plus.Cmd --version 0.1.19
          dotnet t4plus run -f src/CodeGeneration/CodeGeneration.template BasePath:./src $T4.TempPath:./ GenerateMultipleFiles:True DryRun:False
          dotnet pack ExpressionFramework.sln -v normal -c Release --include-symbols --include-source -p:PackageVersion=$VERSION -p:Version=$VERSION -o nupkg
      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            curl -vX PUT -u "pauldeen79:${{ secrets.FEED_TOKEN }}" -F package=@$f https://nuget.pkg.github.com/pauldeen79/
          done
        shell: bash
      - name: Push to NuGet Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            dotnet nuget push $f --source $NUGET_FEED --skip-duplicate --api-key $NUGET_KEY
          done
        shell: bash
