// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 8.0.10
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace ExpressionFramework.Parser
{
    public static partial class ServiceCollectionExtensions
    {
        private static Microsoft.Extensions.DependencyInjection.IServiceCollection AddExpressionParsers(this Microsoft.Extensions.DependencyInjection.IServiceCollection services)
        {
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.AggregateExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.AggregateExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.AllExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.AllExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.AndExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.AndExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.AnyExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.AnyExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.CastExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.CastExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.ChainedExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.ChainedExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.CompoundExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.CompoundExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.ConstantExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.ConstantExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.ConstantResultExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.ConstantResultExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.ContextExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.ContextExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.CountExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.CountExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.DayExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.DayExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.DefaultExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.DefaultExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.DelegateExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.DelegateExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.DelegateResultExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.DelegateResultExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.ElementAtExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.ElementAtExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.ElementAtOrDefaultExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.ElementAtOrDefaultExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.EmptyExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.EmptyExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.EqualsExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.EqualsExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.ErrorExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.ErrorExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.EvaluatableExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.EvaluatableExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.FalseExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.FalseExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.FieldExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.FieldExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.FirstExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.FirstExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.FirstOrDefaultExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.FirstOrDefaultExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.GroupByExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.GroupByExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.IfExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.IfExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.InvalidExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.InvalidExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.LastExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.LastExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.LastOrDefaultExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.LastOrDefaultExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.LeftExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.LeftExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.MaxExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.MaxExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.MinExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.MinExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.MonthExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.MonthExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.NotEqualsExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.NotEqualsExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.NotExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.NotExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.NowExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.NowExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.OfTypeExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.OfTypeExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.OperatorExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.OperatorExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.OrderByExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.OrderByExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.OrExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.OrExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.RightExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.RightExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.SelectExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.SelectExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.SequenceExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.SequenceExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.SingleExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.SingleExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.SingleOrDefaultExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.SingleOrDefaultExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.SkipExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.SkipExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.StringConcatenateExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.StringConcatenateExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.StringFindExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.StringFindExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.StringLengthExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.StringLengthExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.StringReplaceExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.StringReplaceExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.SubstringExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.SubstringExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.SumExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.SumExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.SwitchExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.SwitchExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TakeExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TakeExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.ToCamelCaseExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.ToCamelCaseExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TodayExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TodayExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.ToLowerCaseExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.ToLowerCaseExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.ToPascalCaseExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.ToPascalCaseExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.ToUpperCaseExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.ToUpperCaseExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TrimEndExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TrimEndExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TrimExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TrimExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TrimStartExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TrimStartExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TrueExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TrueExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TryCastExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TryCastExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TypedChainedExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TypedChainedExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TypedConstantExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TypedConstantExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TypedConstantResultExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TypedConstantResultExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TypedContextExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TypedContextExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TypedDelegateExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TypedDelegateExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TypedDelegateResultExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TypedDelegateResultExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.TypedFieldExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.TypedFieldExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.WhereExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.WhereExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.ExpressionResultParsers.YearExpressionParser>();
            services.AddSingleton<ExpressionFramework.Parser.Contracts.IExpressionResolver, ExpressionFramework.Parser.ExpressionResultParsers.YearExpressionParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.AggregatorResultParsers.AddAggregatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.AggregatorResultParsers.DivideAggregatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.AggregatorResultParsers.EnumerableConcatenateAggregatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.AggregatorResultParsers.ModulusAggregatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.AggregatorResultParsers.MultiplyAggregatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.AggregatorResultParsers.PowerAggregatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.AggregatorResultParsers.StringConcatenateAggregatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.AggregatorResultParsers.SubtractAggregatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.EndsWithOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.EnumerableContainsOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.EnumerableNotContainsOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.EqualsOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.IsGreaterOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.IsGreaterOrEqualOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.IsNotNullOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.IsNotNullOrEmptyOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.IsNotNullOrWhiteSpaceOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.IsNullOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.IsNullOrEmptyOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.IsNullOrWhiteSpaceOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.IsSmallerOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.IsSmallerOrEqualOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.NotEndsWithOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.NotEqualsOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.NotStartsWithOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.StartsWithOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.StringContainsOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.OperatorResultParsers.StringNotContainsOperatorParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.EvaluatableResultParsers.ComposableEvaluatableParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.EvaluatableResultParsers.ComposedEvaluatableParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.EvaluatableResultParsers.ConstantEvaluatableParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.EvaluatableResultParsers.DelegateEvaluatableParser>();
            services.AddSingleton<CrossCutting.Utilities.Parsers.Contracts.IFunctionResultParser, ExpressionFramework.Parser.EvaluatableResultParsers.SingleEvaluatableParser>();
            return services;
        }
    }
}
#nullable disable
