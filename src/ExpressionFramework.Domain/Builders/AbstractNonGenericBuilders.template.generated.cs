// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 9.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
#nullable enable
namespace ExpressionFramework.Domain.Builders
{
    public abstract partial class AggregatorBuilder : System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected AggregatorBuilder(ExpressionFramework.Domain.Aggregator source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
        }

        protected AggregatorBuilder()
        {
            SetDefaultValues();
        }

        public abstract ExpressionFramework.Domain.Aggregator Build();

        partial void SetDefaultValues();

        protected void HandlePropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
    public abstract partial class EvaluatableBuilder : System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected EvaluatableBuilder(ExpressionFramework.Domain.Evaluatable source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
        }

        protected EvaluatableBuilder()
        {
            SetDefaultValues();
        }

        public abstract ExpressionFramework.Domain.Evaluatable Build();

        partial void SetDefaultValues();

        protected void HandlePropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
    public abstract partial class ExpressionBuilder : System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected ExpressionBuilder(ExpressionFramework.Domain.Expression source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
        }

        protected ExpressionBuilder()
        {
            SetDefaultValues();
        }

        public abstract ExpressionFramework.Domain.Expression Build();

        partial void SetDefaultValues();

        protected void HandlePropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
    public abstract partial class OperatorBuilder : System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected OperatorBuilder(ExpressionFramework.Domain.Operator source)
        {
            if (source is null) throw new System.ArgumentNullException(nameof(source));
        }

        protected OperatorBuilder()
        {
            SetDefaultValues();
        }

        public abstract ExpressionFramework.Domain.Operator Build();

        partial void SetDefaultValues();

        protected void HandlePropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
}
#nullable disable
