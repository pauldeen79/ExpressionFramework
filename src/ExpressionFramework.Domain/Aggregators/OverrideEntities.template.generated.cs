// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 8.0.6
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

#nullable enable
namespace ExpressionFramework.Domain.Aggregators
{
    public partial record AddAggregator : ExpressionFramework.Domain.Aggregator
    {
        public AddAggregator() : base()
        {
        }

        public override ExpressionFramework.Domain.Builders.AggregatorBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public ExpressionFramework.Domain.Builders.Aggregators.AddAggregatorBuilder ToTypedBuilder()
        {
            return new ExpressionFramework.Domain.Builders.Aggregators.AddAggregatorBuilder(this);
        }
    }
    public partial record DivideAggregator : ExpressionFramework.Domain.Aggregator
    {
        public DivideAggregator() : base()
        {
        }

        public override ExpressionFramework.Domain.Builders.AggregatorBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public ExpressionFramework.Domain.Builders.Aggregators.DivideAggregatorBuilder ToTypedBuilder()
        {
            return new ExpressionFramework.Domain.Builders.Aggregators.DivideAggregatorBuilder(this);
        }
    }
    public partial record EnumerableConcatenateAggregator : ExpressionFramework.Domain.Aggregator
    {
        public EnumerableConcatenateAggregator() : base()
        {
        }

        public override ExpressionFramework.Domain.Builders.AggregatorBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public ExpressionFramework.Domain.Builders.Aggregators.EnumerableConcatenateAggregatorBuilder ToTypedBuilder()
        {
            return new ExpressionFramework.Domain.Builders.Aggregators.EnumerableConcatenateAggregatorBuilder(this);
        }
    }
    public partial record ModulusAggregator : ExpressionFramework.Domain.Aggregator
    {
        public ModulusAggregator() : base()
        {
        }

        public override ExpressionFramework.Domain.Builders.AggregatorBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public ExpressionFramework.Domain.Builders.Aggregators.ModulusAggregatorBuilder ToTypedBuilder()
        {
            return new ExpressionFramework.Domain.Builders.Aggregators.ModulusAggregatorBuilder(this);
        }
    }
    public partial record MultiplyAggregator : ExpressionFramework.Domain.Aggregator
    {
        public MultiplyAggregator() : base()
        {
        }

        public override ExpressionFramework.Domain.Builders.AggregatorBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public ExpressionFramework.Domain.Builders.Aggregators.MultiplyAggregatorBuilder ToTypedBuilder()
        {
            return new ExpressionFramework.Domain.Builders.Aggregators.MultiplyAggregatorBuilder(this);
        }
    }
    public partial record PowerAggregator : ExpressionFramework.Domain.Aggregator
    {
        public PowerAggregator() : base()
        {
        }

        public override ExpressionFramework.Domain.Builders.AggregatorBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public ExpressionFramework.Domain.Builders.Aggregators.PowerAggregatorBuilder ToTypedBuilder()
        {
            return new ExpressionFramework.Domain.Builders.Aggregators.PowerAggregatorBuilder(this);
        }
    }
    public partial record StringConcatenateAggregator : ExpressionFramework.Domain.Aggregator
    {
        public StringConcatenateAggregator() : base()
        {
        }

        public override ExpressionFramework.Domain.Builders.AggregatorBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public ExpressionFramework.Domain.Builders.Aggregators.StringConcatenateAggregatorBuilder ToTypedBuilder()
        {
            return new ExpressionFramework.Domain.Builders.Aggregators.StringConcatenateAggregatorBuilder(this);
        }
    }
    public partial record SubtractAggregator : ExpressionFramework.Domain.Aggregator
    {
        public SubtractAggregator() : base()
        {
        }

        public override ExpressionFramework.Domain.Builders.AggregatorBuilder ToBuilder()
        {
            return ToTypedBuilder();
        }

        public ExpressionFramework.Domain.Builders.Aggregators.SubtractAggregatorBuilder ToTypedBuilder()
        {
            return new ExpressionFramework.Domain.Builders.Aggregators.SubtractAggregatorBuilder(this);
        }
    }
}
#nullable disable
